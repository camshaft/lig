#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var spawn = require('win-fork');
var axon = require('axon');
var sock = axon.socket('push');
var parseAddress = require('../lib/util').parseAddress;

/**
 * usage
 */

program
  .version(require('../package').version)
  .option('-a, --address <address>', 'address of log server', 'tcp://0.0.0.0:91988');

/**
 * parse argv
 */

program.parse(process.argv);

/**
 * command
 */

var cmd = program.args[0];

/**
 * display help
 */

if (!cmd) {
  process.stdout.write(program.helpInformation());
  program.emit('--help');
  process.exit();
}

/**
 * extract the arguments
 */

var args;

for (var i = 2; i < process.argv.length; i += 2) {
  var item = process.argv[i];
  if (item.indexOf('-') === 0) continue;
  args = process.argv.slice(i + 1);
  break;
}

/**
 * define our axon codec
 */

axon.codec.define('json', {
  encode: JSON.stringify,
  decode: JSON.parse
});
sock.format('json');

/**
 * connect to our server
 */

sock.connect(parseAddress(program.address));

/**
 * spawn
 */

var proc = spawn(cmd, args);

proc.stdout.on('data', function(data) {
  process.stdout.write(data);
  sock.send({c: cmd, a: args, t: 'out', d: process.cwd(), m: data});
});

proc.stderr.on('data', function(data) {
  process.stderr.write(data);
  sock.send({c: cmd, a: args, t: 'err', d: process.cwd(), m: data});
});

proc.on('error', function(err) {
  if (err.code !== 'ENOENT') throw err;
  console.error('cannot find command:', program.args.join(' '));
});

proc.on('close', function(code){
  sock.send({c: cmd, a: args, t: 'disconnect', d: process.cwd()});
  process.exit(code);
});

process.on('SIGINT', function() {
  proc.kill('SIGINT');
  process.exit(0);
});

process.on('SIGTERM', function() {
  proc.kill('SIGTERM');
  process.exit(0);
});
